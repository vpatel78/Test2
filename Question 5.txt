Input characters are read, and tokens are generated as the principal task of lexical analysis.

The whole source code of the software is scan by a lexical analyzer. Each token is identified one by one. 
Typically scanners are only used when requested from a parser to generate tokens. This is how it functions.

"Get next token" is a command that is sent to the lexical analyzer from the Parser.
The lexical analyzer checks the input when the order is sent until the next token is located.
It gives Parser the token.

When these tokens are formed, Lexical Analyzer skips spaces and comments. 
If any mistake is present, this is correlated with the source file and line name by Lexical Analyzer. 
Input characters are read, and tokens are generated as the principal task of lexical analysis.

Lexical Analysis Example, Tokens, Non Tokens
Consider the code given to the Lexical Analyzer

#include <stdio.h>
    int maximum(int x, int y) {
        // This will compare 2 numbers
        if (x > y)
            return x;
        else {
            return y;
        }
    }
